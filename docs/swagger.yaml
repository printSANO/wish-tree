definitions:
  gin.H:
    additionalProperties: {}
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Comment:
    description: A comment that belongs to a wish.
    properties:
      content:
        description: |-
          The content of the comment.
          @Description The actual text of the comment.
          @example This is a great wish!
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      updatedAt:
        type: string
      wish:
        allOf:
        - $ref: '#/definitions/models.Wish'
        description: |-
          The associated wish.
          @Description The Wish object that this comment is associated with.
      wish_id:
        description: |-
          The ID of the wish this comment belongs to.
          @Description The ID of the associated wish.
          @example 5
        type: integer
    type: object
  models.CreateCommentRequest:
    description: JSON body for creating a comment
    properties:
      content:
        type: string
      wish_id:
        type: integer
    required:
    - content
    - wish_id
    type: object
  models.CreateWishRequest:
    description: JSON body for creating a wish
    properties:
      category:
        type: string
      content:
        type: string
      title:
        type: string
    required:
    - category
    - content
    - title
    type: object
  models.PaginatedResponse-models_Comment:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      pagination:
        $ref: '#/definitions/models.Pagination'
    type: object
  models.PaginatedResponse-models_Wish:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Wish'
        type: array
      pagination:
        $ref: '#/definitions/models.Pagination'
    type: object
  models.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  models.Wish:
    description: Wish object containing details of a user's wish.
    properties:
      category:
        description: |-
          The category of the wish, which groups similar wishes together.
          @Description Category of the wish.
          @example General
        type: string
      content:
        description: |-
          The content or detailed description of the wish.
          @Description Detailed content of the wish.
          @example This is the content of my wish.
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_confirm:
        allOf:
        - $ref: '#/definitions/models.WishStatus'
        description: |-
          The current status of the wish (approved, pending, rejected).
          @Description Status of the wish.
          @Enum approved
          @Enum pending
          @Enum rejected
          @example pending
      title:
        description: |-
          The title of the wish.
          @Description Title of the wish.
          @example A wish
        type: string
      updatedAt:
        type: string
    type: object
  models.WishStatus:
    description: Status of the wish
    enum:
    - approved
    - pending
    - rejected
    type: string
    x-enum-varnames:
    - Approved
    - Pending
    - Rejected
info:
  contact: {}
paths:
  /comments:
    post:
      consumes:
      - application/json
      description: Create a new comment
      parameters:
      - description: Comment content and wish ID
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a comment
      tags:
      - comments
  /comments/{id}:
    delete:
      description: Delete a comment by its ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a comment
      tags:
      - comments
  /comments/{wish_id}:
    get:
      description: Retrieve comments for a wish by its ID
      parameters:
      - description: Wish ID
        in: path
        name: wish_id
        required: true
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse-models_Comment'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get comments by wish ID
      tags:
      - comments
  /wishes:
    post:
      consumes:
      - application/json
      description: Create a new wish with the provided category, content, and title
      parameters:
      - description: Wish data
        in: body
        name: wish
        required: true
        schema:
          $ref: '#/definitions/models.CreateWishRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Wish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new wish
      tags:
      - wishes
  /wishes/{id}:
    delete:
      description: Delete a wish by its ID
      parameters:
      - description: Wish ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a wish
      tags:
      - wishes
    get:
      description: Retrieve a wish by its ID
      parameters:
      - description: Wish ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Wish'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a wish by ID
      tags:
      - wishes
    patch:
      description: Update the status of a wish by its ID
      parameters:
      - description: Wish ID
        in: path
        name: id
        required: true
        type: integer
      - description: New status of the wish (approve/reject)
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Wish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update the status of a wish
      tags:
      - wishes
  /wishes/approved:
    get:
      description: Retrieve all wishes with the status 'approved'
      parameters:
      - description: Category
        in: query
        name: category
        type: string
      - description: Title
        in: query
        name: title
        type: string
      - description: Content
        in: query
        name: content
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse-models_Wish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all approved wishes
      tags:
      - wishes
  /wishes/pending:
    get:
      description: Retrieve all wishes with the status 'pending'
      parameters:
      - description: Category
        in: query
        name: category
        type: string
      - description: Title
        in: query
        name: title
        type: string
      - description: Content
        in: query
        name: content
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse-models_Wish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all pending wishes
      tags:
      - wishes
  /wishes/rejected:
    get:
      description: Retrieve all wishes with the status 'rejected'
      parameters:
      - description: Category
        in: query
        name: category
        type: string
      - description: Title
        in: query
        name: title
        type: string
      - description: Content
        in: query
        name: content
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse-models_Wish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all rejected wishes
      tags:
      - wishes
swagger: "2.0"
